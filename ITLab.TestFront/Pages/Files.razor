@page "/files"
@using Microsoft.Extensions.Logging
@using Blazor.FileReader

@inject IJSRuntime js
@inject Blazor.FileReader.IFileReaderService fileReaderService


@using System.Net.Http

@inject Microsoft.Extensions.Logging.ILogger<Index> logger
@inject NavigationManager navigationManager

<h1>Список доступных файлов</h1>


@foreach (var file in files)
{
    <a href="@connectionStrings.DownloadFile(file.Id)">@file.Filename</a>
    <p>Загружено: @FormatDate(file.UploadDate)</p>
    <img style="max-width:200px" src="@connectionStrings.DownloadFile(file.Id)" />
    <hr />
    <br />
}

@code {

    string error;

    List<FileObjectModel> files = new List<FileObjectModel>();

    [CascadingParameter]
    HttpClient httpClient { get; set; }


    [CascadingParameter]
    ConnectionStrings connectionStrings { get; set; }

    [CascadingParameter]
    IFilesApi filesApi { get; set; }


    private async Task Download(string fileName, string id)
    {
        var bytes = await httpClient.GetByteArrayAsync(connectionStrings.DownloadFile(id));
        await js.InvokeVoidAsync("saveAsFile", fileName, Convert.ToBase64String(bytes));
    }

    protected override async Task OnInitializedAsync()
    {
        files = await filesApi.FilesList(connectionStrings.UserId);
    }
    private string FormatDate(DateTime dateTime)
    {
        return $"{dateTime.Year}.{dateTime.Month:D2}.{dateTime.Day:D2}"; ;
    }
}
